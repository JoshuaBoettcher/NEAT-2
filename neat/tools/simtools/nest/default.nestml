
neuron default:

parameters:

    # parameters TestChannel
    gbar_TestChannel real = 0.00
    e_TestChannel real = -23.00

    # parameters TestChannel2
    gbar_TestChannel2 real = 0.00
    e_TestChannel2 real = -23.00

    # parameters Na_Ta
    gbar_Na_Ta real = 0.00
    e_Na_Ta real = 50.00

    # parameters Kv3_1
    gbar_Kv3_1 real = 0.00
    e_Kv3_1 real = -85.00

    # parameters SK
    gbar_SK real = 0.00
    e_SK real = -85.00

    # parameters h
    gbar_h real = 0.00
    e_h real = -43.00
end


state:
    v_comp real

    # state variables TestChannel
    a01_TestChannel real
    a11_TestChannel real
    a02_TestChannel real
    a10_TestChannel real
    a00_TestChannel real
    a12_TestChannel real

    # state variables TestChannel2
    a10_TestChannel2 real
    a01_TestChannel2 real
    a11_TestChannel2 real
    a00_TestChannel2 real

    # state variables Na_Ta
    m_Na_Ta real
    h_Na_Ta real

    # state variables Kv3_1
    m_Kv3_1 real

    # state variables SK
    z_SK real

    # state variables h
    hs_h real
    hf_h real
end


equations:

    # equation TestChannel
    inline TestChannel real = gbar_TestChannel * (5*a00_TestChannel**3*a01_TestChannel**3*a02_TestChannel + a10_TestChannel**2*a11_TestChannel**2*a12_TestChannel) * (e_TestChannel - v_comp)

    # equation TestChannel2
    inline TestChannel2 real = gbar_TestChannel2 * (0.9*a00_TestChannel2**3*a01_TestChannel2**2 + 0.1*a10_TestChannel2**2*a11_TestChannel2) * (e_TestChannel2 - v_comp)

    # equation Na_Ta
    inline Na_Ta real = gbar_Na_Ta * (h_Na_Ta*m_Na_Ta**3) * (e_Na_Ta - v_comp)

    # equation Kv3_1
    inline Kv3_1 real = gbar_Kv3_1 * (m_Kv3_1) * (e_Kv3_1 - v_comp)

    # equation SK
    inline SK real = gbar_SK * (z_SK) * (e_SK - v_comp)

    # equation h
    inline h real = gbar_h * (0.8*hf_h + 0.2*hs_h) * (e_h - v_comp)
end



# functions TestChannel
function a01_inf_TestChannel (v_comp real) real:
    return 1.0*(1.0 + exp(0.01*(30.0 - v_comp)))**(-1)
end
function tau_a01_TestChannel (v_comp real) real:
    return 2.00000000000000
end
function a11_inf_TestChannel (v_comp real) real:
    return 2.0*(1.0 + exp(0.01*(30.0 - v_comp)))**(-1)
end
function tau_a11_TestChannel (v_comp real) real:
    return 2.00000000000000
end
function a02_inf_TestChannel (v_comp real) real:
    return -10.0000000000000
end
function tau_a02_TestChannel (v_comp real) real:
    return 1.00000000000000
end
function a10_inf_TestChannel (v_comp real) real:
    return 2.0*(1.0 + exp(0.01*(-30.0 + v_comp)))**(-1)
end
function tau_a10_TestChannel (v_comp real) real:
    return 2.00000000000000
end
function a00_inf_TestChannel (v_comp real) real:
    return 1.0*(1.0 + exp(0.01*(-30.0 + v_comp)))**(-1)
end
function tau_a00_TestChannel (v_comp real) real:
    return 1.00000000000000
end
function a12_inf_TestChannel (v_comp real) real:
    return -30.0000000000000
end
function tau_a12_TestChannel (v_comp real) real:
    return 3.00000000000000
end

# functions TestChannel2
function a10_inf_TestChannel2 (v_comp real) real:
    return 0.400000000000000
end
function tau_a10_TestChannel2 (v_comp real) real:
    return 2.00000000000000
end
function a01_inf_TestChannel2 (v_comp real) real:
    return 0.500000000000000
end
function tau_a01_TestChannel2 (v_comp real) real:
    return 2.00000000000000
end
function a11_inf_TestChannel2 (v_comp real) real:
    return 0.600000000000000
end
function tau_a11_TestChannel2 (v_comp real) real:
    return 2.00000000000000
end
function a00_inf_TestChannel2 (v_comp real) real:
    return 0.300000000000000
end
function tau_a00_TestChannel2 (v_comp real) real:
    return 1.00000000000000
end

# functions Na_Ta
function m_inf_Na_Ta (v_comp real) real:
    return 0.182*(1.0 - exp(0.166666666666667*(-38.0 - v_comp)))**(-1)*(0.182*(38.0 + v_comp)*(1.0 - exp(0.166666666666667*(-38.0 - v_comp)))**(-1) - 0.124*(38.0 + v_comp)*(1.0 - exp(0.166666666666667*(38.0 + v_comp)))**(-1))**(-1)*(38.0 + v_comp)
end
function tau_m_Na_Ta (v_comp real) real:
    return 0.338983050847458*(0.182*(38.0 + v_comp)*(1.0 - exp(0.166666666666667*(-38.0 - v_comp)))**(-1) - 0.124*(38.0 + v_comp)*(1.0 - exp(0.166666666666667*(38.0 + v_comp)))**(-1))**(-1)
end
function h_inf_Na_Ta (v_comp real) real:
    return -0.015*(1.0 - exp(0.166666666666667*(66.0 + v_comp)))**(-1)*(0.015*(66.0 + v_comp)*(1.0 - exp(0.166666666666667*(-66.0 - v_comp)))**(-1) - 0.015*(66.0 + v_comp)*(1.0 - exp(0.166666666666667*(66.0 + v_comp)))**(-1))**(-1)*(66.0 + v_comp)
end
function tau_h_Na_Ta (v_comp real) real:
    return 0.338983050847458*(0.015*(66.0 + v_comp)*(1.0 - exp(0.166666666666667*(-66.0 - v_comp)))**(-1) - 0.015*(66.0 + v_comp)*(1.0 - exp(0.166666666666667*(66.0 + v_comp)))**(-1))**(-1)
end

# functions Kv3_1
function m_inf_Kv3_1 (v_comp real) real:
    return 1.0*(1.0 + exp(0.103092783505155*(18.7 - v_comp)))**(-1)
end
function tau_m_Kv3_1 (v_comp real) real:
    return 4.0*(1.0 + exp(0.0226551880380607*(-46.56 - v_comp)))**(-1)
end

# functions SK
function z_inf_SK (v_comp real) real:
    return 0.000909821306333216
end
function tau_z_SK (v_comp real) real:
    return 1.00000000000000
end

# functions h
function hs_inf_h (v_comp real) real:
    return 1.0*(1.0 + exp(0.142857142857143*(82.0 + v_comp)))**(-1)
end
function tau_hs_h (v_comp real) real:
    return 300.000000000000
end
function hf_inf_h (v_comp real) real:
    return 1.0*(1.0 + exp(0.142857142857143*(82.0 + v_comp)))**(-1)
end
function tau_hf_h (v_comp real) real:
    return 40.0000000000000
end

end